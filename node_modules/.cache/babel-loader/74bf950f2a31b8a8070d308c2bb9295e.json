{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Somreth\\\\Desktop\\\\QProject\\\\Project_Pomodoro_Timer_Qualified_1\\\\src\\\\pomodoro\\\\Pomodoro.js\";\nimport React, { useState } from \"react\";\nimport classNames from \"../utils/class-names\";\nimport useInterval from \"../utils/useInterval\";\nimport { minutesToDuration, secondsToDuration } from \"../utils/duration\";\nimport Session from \"../pomodoro/Session\";\n\nfunction Pomodoro() {\n  // Timer starts out paused\n  const [isTimerRunning, setIsTimerRunning] = useState(false);\n  const [focusTime, setFocusTime] = useState(25);\n  const [breakTime, setBreakTime] = useState(5);\n  const [timeRemaining, setTimeRemaining] = useState(25 * 60);\n  const [mode, setMode] = useState(\"focus\");\n  const [sessionActive, setSessionActive] = useState(false);\n  useInterval(() => {\n    // ToDo: Implement what should happen when the timer is running\n    if (timeRemaining === 0) {\n      // play the alarm\n      // new Audio(`https://bigsoundbank.com/UPLOAD/mp3/1482.mp3`).play();\n      const duration = mode === \"focus\" ? breakTime : focusTime; // select the correct time duration\n\n      setTimeRemaining(duration * 60); // set the time remaining to the new duration\n\n      setMode(prevMode => prevMode === \"focus\" ? \"break\" : \"focus\");\n      return;\n    }\n\n    setTimeRemaining(timeRemaining - 1);\n  }, isTimerRunning ? 1000 : null);\n\n  const stopTimer = () => {\n    setSessionActive(false);\n    setIsTimerRunning(false);\n    setMode(\"focus\");\n  };\n\n  function playPause() {\n    // if session is false, reset our timeremaining to default\n    if (!sessionActive) {\n      setSessionActive(true);\n      setTimeRemaining(focusTime * 60);\n    }\n\n    setIsTimerRunning(prevState => !prevState);\n  }\n\n  const decreaseFocus = () => {\n    setFocusTime(lastFocus => Math.max(5, lastFocus - 5)); // take the previous focusDuration value and subtract 5\n  };\n\n  const increaseFocus = () => {\n    setFocusTime(lastFocus => Math.min(60, lastFocus + 5)); // take the previous focusDuration value and add 5\n  };\n\n  const decreaseBreak = () => {\n    setBreakTime(lastBreak => Math.max(1, lastBreak - 1));\n  };\n\n  const increaseBreak = () => {\n    setBreakTime(lastBreak => Math.min(15, lastBreak + 1));\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"pomodoro\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"input-group input-group-lg mb-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"input-group-text\",\n    \"data-testid\": \"duration-focus\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }\n  }, \"Focus Duration: \", minutesToDuration(focusDuration)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"input-group-append\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"btn btn-secondary\",\n    \"data-testid\": \"decrease-focus\",\n    onClick: decreaseFocus,\n    disabled: focusTime <= 5 || isTimerRunning ? true : false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"oi oi-minus\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"btn btn-secondary\",\n    \"data-testid\": \"increase-focus\",\n    onClick: increaseFocus,\n    disabled: focusTime >= 60 || isTimerRunning ? true : false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"oi oi-plus\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 17\n    }\n  }))))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"float-right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"input-group input-group-lg mb-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"input-group-text\",\n    \"data-testid\": \"duration-break\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 15\n    }\n  }, \"Break Duration: \", breakTime, \":00\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"input-group-append\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"btn btn-secondary\",\n    \"data-testid\": \"decrease-break\",\n    onClick: decreaseBreak,\n    disabled: sessionActive && isTimerRunning ? true : false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"oi oi-minus\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 19\n    }\n  })), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"btn btn-secondary\",\n    \"data-testid\": \"increase-break\",\n    onClick: increaseBreak,\n    disabled: sessionActive && isTimerRunning ? true : false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"oi oi-plus\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 19\n    }\n  }))))))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"btn-group btn-group-lg mb-2\",\n    role: \"group\",\n    \"aria-label\": \"Timer controls\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"btn btn-primary\",\n    \"data-testid\": \"play-pause\",\n    title: \"Start or pause timer\",\n    onClick: playPause,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: classNames({\n      oi: true,\n      \"oi-media-play\": !isTimerRunning,\n      \"oi-media-pause\": isTimerRunning\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"btn btn-secondary\",\n    title: \"Stop the session\",\n    onClick: stopTimer,\n    disabled: !sessionActive,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"oi oi-media-stop\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 15\n    }\n  }))))), /*#__PURE__*/React.createElement(Session, {\n    mode: mode,\n    isTimerRunning: isTimerRunning,\n    timeRemaining: timeRemaining,\n    sessionActive: sessionActive,\n    focusTime: focusTime,\n    breakTime: breakTime,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 7\n    }\n  }));\n}\n\nexport default Pomodoro;","map":{"version":3,"sources":["C:/Users/Somreth/Desktop/QProject/Project_Pomodoro_Timer_Qualified_1/src/pomodoro/Pomodoro.js"],"names":["React","useState","classNames","useInterval","minutesToDuration","secondsToDuration","Session","Pomodoro","isTimerRunning","setIsTimerRunning","focusTime","setFocusTime","breakTime","setBreakTime","timeRemaining","setTimeRemaining","mode","setMode","sessionActive","setSessionActive","duration","prevMode","stopTimer","playPause","prevState","decreaseFocus","lastFocus","Math","max","increaseFocus","min","decreaseBreak","lastBreak","increaseBreak","focusDuration","oi"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,UAAP,MAAuB,sBAAvB;AACA,OAAOC,WAAP,MAAwB,sBAAxB;AACA,SAASC,iBAAT,EAA4BC,iBAA5B,QAAqD,mBAArD;AACA,OAAOC,OAAP,MAAoB,qBAApB;;AAEA,SAASC,QAAT,GAAoB;AAClB;AACA,QAAM,CAACC,cAAD,EAAiBC,iBAAjB,IAAsCR,QAAQ,CAAC,KAAD,CAApD;AACA,QAAM,CAACS,SAAD,EAAYC,YAAZ,IAA4BV,QAAQ,CAAC,EAAD,CAA1C;AACA,QAAM,CAACW,SAAD,EAAYC,YAAZ,IAA4BZ,QAAQ,CAAC,CAAD,CAA1C;AACA,QAAM,CAACa,aAAD,EAAgBC,gBAAhB,IAAoCd,QAAQ,CAAC,KAAK,EAAN,CAAlD;AACA,QAAM,CAACe,IAAD,EAAOC,OAAP,IAAkBhB,QAAQ,CAAC,OAAD,CAAhC;AACA,QAAM,CAACiB,aAAD,EAAgBC,gBAAhB,IAAoClB,QAAQ,CAAC,KAAD,CAAlD;AAEAE,EAAAA,WAAW,CACT,MAAM;AACJ;AACA,QAAIW,aAAa,KAAK,CAAtB,EAAyB;AACvB;AACA;AACA,YAAMM,QAAQ,GAAGJ,IAAI,KAAK,OAAT,GAAmBJ,SAAnB,GAA+BF,SAAhD,CAHuB,CAGoC;;AAC3DK,MAAAA,gBAAgB,CAACK,QAAQ,GAAG,EAAZ,CAAhB,CAJuB,CAIS;;AAChCH,MAAAA,OAAO,CAAEI,QAAD,IAAeA,QAAQ,KAAK,OAAb,GAAuB,OAAvB,GAAiC,OAAjD,CAAP;AACA;AACD;;AACDN,IAAAA,gBAAgB,CAACD,aAAa,GAAG,CAAjB,CAAhB;AACD,GAZQ,EAaTN,cAAc,GAAG,IAAH,GAAU,IAbf,CAAX;;AAgBA,QAAMc,SAAS,GAAG,MAAM;AACtBH,IAAAA,gBAAgB,CAAC,KAAD,CAAhB;AACAV,IAAAA,iBAAiB,CAAC,KAAD,CAAjB;AACAQ,IAAAA,OAAO,CAAC,OAAD,CAAP;AACD,GAJD;;AAMA,WAASM,SAAT,GAAqB;AACnB;AACA,QAAI,CAACL,aAAL,EAAoB;AAClBC,MAAAA,gBAAgB,CAAC,IAAD,CAAhB;AACAJ,MAAAA,gBAAgB,CAACL,SAAS,GAAG,EAAb,CAAhB;AACD;;AACDD,IAAAA,iBAAiB,CAAEe,SAAD,IAAe,CAACA,SAAjB,CAAjB;AACD;;AAED,QAAMC,aAAa,GAAG,MAAM;AAC1Bd,IAAAA,YAAY,CAAEe,SAAD,IAAeC,IAAI,CAACC,GAAL,CAAS,CAAT,EAAYF,SAAS,GAAG,CAAxB,CAAhB,CAAZ,CAD0B,CAC+B;AAC1D,GAFD;;AAIA,QAAMG,aAAa,GAAG,MAAM;AAC1BlB,IAAAA,YAAY,CAAEe,SAAD,IAAeC,IAAI,CAACG,GAAL,CAAS,EAAT,EAAaJ,SAAS,GAAG,CAAzB,CAAhB,CAAZ,CAD0B,CACgC;AAC3D,GAFD;;AAIA,QAAMK,aAAa,GAAG,MAAM;AAC1BlB,IAAAA,YAAY,CAAEmB,SAAD,IAAeL,IAAI,CAACC,GAAL,CAAS,CAAT,EAAYI,SAAS,GAAG,CAAxB,CAAhB,CAAZ;AACD,GAFD;;AAIA,QAAMC,aAAa,GAAG,MAAM;AAC1BpB,IAAAA,YAAY,CAAEmB,SAAD,IAAeL,IAAI,CAACG,GAAL,CAAS,EAAT,EAAaE,SAAS,GAAG,CAAzB,CAAhB,CAAZ;AACD,GAFD;;AAIA,sBACE;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,iCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAM,IAAA,SAAS,EAAC,kBAAhB;AAAmC,mBAAY,gBAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAEmB5B,iBAAiB,CAAC8B,aAAD,CAFpC,CADF,eAKE;AAAK,IAAA,SAAS,EAAC,oBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEE;AACE,IAAA,IAAI,EAAC,QADP;AAEE,IAAA,SAAS,EAAC,mBAFZ;AAGE,mBAAY,gBAHd;AAIE,IAAA,OAAO,EAAET,aAJX;AAKE,IAAA,QAAQ,EAAEf,SAAS,IAAI,CAAb,IAAkBF,cAAlB,GAAmC,IAAnC,GAA0C,KALtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAOE;AAAM,IAAA,SAAS,EAAC,aAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPF,CAFF,eAYE;AACE,IAAA,IAAI,EAAC,QADP;AAEE,IAAA,SAAS,EAAC,mBAFZ;AAGE,mBAAY,gBAHd;AAIE,IAAA,OAAO,EAAEqB,aAJX;AAKE,IAAA,QAAQ,EAAEnB,SAAS,IAAI,EAAb,IAAmBF,cAAnB,GAAoC,IAApC,GAA2C,KALvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAOE;AAAM,IAAA,SAAS,EAAC,YAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPF,CAZF,CALF,CADF,CADF,eA+BE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,iCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAM,IAAA,SAAS,EAAC,kBAAhB;AAAmC,mBAAY,gBAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAEmBI,SAFnB,QADF,eAKE;AAAK,IAAA,SAAS,EAAC,oBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEE;AACE,IAAA,IAAI,EAAC,QADP;AAEE,IAAA,SAAS,EAAC,mBAFZ;AAGE,mBAAY,gBAHd;AAIE,IAAA,OAAO,EAAEmB,aAJX;AAKE,IAAA,QAAQ,EAAEb,aAAa,IAAIV,cAAjB,GAAkC,IAAlC,GAAyC,KALrD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAOE;AAAM,IAAA,SAAS,EAAC,aAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPF,CAFF,eAYE;AACE,IAAA,IAAI,EAAC,QADP;AAEE,IAAA,SAAS,EAAC,mBAFZ;AAGE,mBAAY,gBAHd;AAIE,IAAA,OAAO,EAAEyB,aAJX;AAKE,IAAA,QAAQ,EAAEf,aAAa,IAAIV,cAAjB,GAAkC,IAAlC,GAAyC,KALrD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAOE;AAAM,IAAA,SAAS,EAAC,YAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPF,CAZF,CALF,CADF,CADF,CA/BF,CADF,eAiEE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AACE,IAAA,SAAS,EAAC,6BADZ;AAEE,IAAA,IAAI,EAAC,OAFP;AAGE,kBAAW,gBAHb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAKE;AACE,IAAA,IAAI,EAAC,QADP;AAEE,IAAA,SAAS,EAAC,iBAFZ;AAGE,mBAAY,YAHd;AAIE,IAAA,KAAK,EAAC,sBAJR;AAKE,IAAA,OAAO,EAAEe,SALX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAOE;AACE,IAAA,SAAS,EAAErB,UAAU,CAAC;AACpBiC,MAAAA,EAAE,EAAE,IADgB;AAEpB,uBAAiB,CAAC3B,cAFE;AAGpB,wBAAkBA;AAHE,KAAD,CADvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPF,CALF,eAqBE;AACE,IAAA,IAAI,EAAC,QADP;AAEE,IAAA,SAAS,EAAC,mBAFZ;AAGE,IAAA,KAAK,EAAC,kBAHR;AAIE,IAAA,OAAO,EAAEc,SAJX;AAKE,IAAA,QAAQ,EAAE,CAACJ,aALb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAOE;AAAM,IAAA,SAAS,EAAC,kBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPF,CArBF,CADF,CADF,CAjEF,eAoGE,oBAAC,OAAD;AAAS,IAAA,IAAI,EAAEF,IAAf;AAAqB,IAAA,cAAc,EAAER,cAArC;AAAqD,IAAA,aAAa,EAAEM,aAApE;AAAmF,IAAA,aAAa,EAAEI,aAAlG;AAAiH,IAAA,SAAS,EAAER,SAA5H;AAAuI,IAAA,SAAS,EAAEE,SAAlJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IApGF,CADF;AAwGD;;AAED,eAAeL,QAAf","sourcesContent":["import React, { useState } from \"react\";\nimport classNames from \"../utils/class-names\";\nimport useInterval from \"../utils/useInterval\";\nimport { minutesToDuration, secondsToDuration } from \"../utils/duration\";\nimport Session from \"../pomodoro/Session\";\n\nfunction Pomodoro() {\n  // Timer starts out paused\n  const [isTimerRunning, setIsTimerRunning] = useState(false);\n  const [focusTime, setFocusTime] = useState(25);\n  const [breakTime, setBreakTime] = useState(5);\n  const [timeRemaining, setTimeRemaining] = useState(25 * 60);\n  const [mode, setMode] = useState(\"focus\");\n  const [sessionActive, setSessionActive] = useState(false);\n\n  useInterval(\n    () => {\n      // ToDo: Implement what should happen when the timer is running\n      if (timeRemaining === 0) {\n        // play the alarm\n        // new Audio(`https://bigsoundbank.com/UPLOAD/mp3/1482.mp3`).play();\n        const duration = mode === \"focus\" ? breakTime : focusTime; // select the correct time duration\n        setTimeRemaining(duration * 60) // set the time remaining to the new duration\n        setMode((prevMode) => (prevMode === \"focus\" ? \"break\" : \"focus\"));\n        return;\n      }\n      setTimeRemaining(timeRemaining - 1)\n    },\n    isTimerRunning ? 1000 : null\n  );\n\n  const stopTimer = () => {\n    setSessionActive(false);\n    setIsTimerRunning(false);\n    setMode(\"focus\");\n  }\n\n  function playPause() {\n    // if session is false, reset our timeremaining to default\n    if (!sessionActive) {\n      setSessionActive(true)\n      setTimeRemaining(focusTime * 60)\n    }\n    setIsTimerRunning((prevState) => !prevState);\n  }\n\n  const decreaseFocus = () => {\n    setFocusTime((lastFocus) => Math.max(5, lastFocus - 5)); // take the previous focusDuration value and subtract 5\n  };\n\n  const increaseFocus = () => {\n    setFocusTime((lastFocus) => Math.min(60, lastFocus + 5)); // take the previous focusDuration value and add 5\n  };\n\n  const decreaseBreak = () => {\n    setBreakTime((lastBreak) => Math.max(1, lastBreak - 1));\n  };\n\n  const increaseBreak = () => {\n    setBreakTime((lastBreak) => Math.min(15, lastBreak + 1));\n  };\n\n  return (\n    <div className=\"pomodoro\">\n      <div className=\"row\">\n        <div className=\"col\">\n          <div className=\"input-group input-group-lg mb-2\">\n            <span className=\"input-group-text\" data-testid=\"duration-focus\">\n              {/* TODO: Update this text to display the current focus session duration */}\n              Focus Duration: {minutesToDuration(focusDuration)}\n            </span>\n            <div className=\"input-group-append\">\n              {/* TODO: Implement decreasing focus duration and disable during a focus or break session */}\n              <button\n                type=\"button\"\n                className=\"btn btn-secondary\"\n                data-testid=\"decrease-focus\"\n                onClick={decreaseFocus}\n                disabled={focusTime <= 5 || isTimerRunning ? true : false}\n              >\n                <span className=\"oi oi-minus\" />\n              </button>\n              {/* TODO: Implement increasing focus duration  and disable during a focus or break session */}\n              <button\n                type=\"button\"\n                className=\"btn btn-secondary\"\n                data-testid=\"increase-focus\"\n                onClick={increaseFocus}\n                disabled={focusTime >= 60 || isTimerRunning ? true : false}\n              >\n                <span className=\"oi oi-plus\" />\n              </button>\n            </div>\n          </div>\n        </div>\n        <div className=\"col\">\n          <div className=\"float-right\">\n            <div className=\"input-group input-group-lg mb-2\">\n              <span className=\"input-group-text\" data-testid=\"duration-break\">\n                {/* TODO: Update this text to display the current break session duration */}\n                Break Duration: {breakTime}:00\n              </span>\n              <div className=\"input-group-append\">\n                {/* TODO: Implement decreasing break duration and disable during a focus or break session*/}\n                <button\n                  type=\"button\"\n                  className=\"btn btn-secondary\"\n                  data-testid=\"decrease-break\"\n                  onClick={decreaseBreak}\n                  disabled={sessionActive && isTimerRunning ? true : false}\n                >\n                  <span className=\"oi oi-minus\" />\n                </button>\n                {/* TODO: Implement increasing break duration and disable during a focus or break session*/}\n                <button\n                  type=\"button\"\n                  className=\"btn btn-secondary\"\n                  data-testid=\"increase-break\"\n                  onClick={increaseBreak}\n                  disabled={sessionActive && isTimerRunning ? true : false}\n                >\n                  <span className=\"oi oi-plus\" />\n                </button>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div className=\"row\">\n        <div className=\"col\">\n          <div\n            className=\"btn-group btn-group-lg mb-2\"\n            role=\"group\"\n            aria-label=\"Timer controls\"\n          >\n            <button\n              type=\"button\"\n              className=\"btn btn-primary\"\n              data-testid=\"play-pause\"\n              title=\"Start or pause timer\"\n              onClick={playPause}\n            >\n              <span\n                className={classNames({\n                  oi: true,\n                  \"oi-media-play\": !isTimerRunning,\n                  \"oi-media-pause\": isTimerRunning,\n                })}\n              />\n            </button>\n            {/* TODO: Implement stopping the current focus or break session and disable when there is no active session */}\n            <button\n              type=\"button\"\n              className=\"btn btn-secondary\"\n              title=\"Stop the session\"\n              onClick={stopTimer}\n              disabled={!sessionActive}\n            >\n              <span className=\"oi oi-media-stop\" />\n            </button>\n          </div>\n        </div>\n      </div>\n      <Session mode={mode} isTimerRunning={isTimerRunning} timeRemaining={timeRemaining} sessionActive={sessionActive} focusTime={focusTime} breakTime={breakTime} />\n    </div>\n  );\n}\n\nexport default Pomodoro;\n"]},"metadata":{},"sourceType":"module"}