{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Somreth\\\\Desktop\\\\QProject\\\\Project_Pomodoro_Timer_Qualified_1\\\\src\\\\pomodoro\\\\Session.js\";\nimport React from \"react\";\nimport { minutesToDuration, secondsToDuration } from \"../utils/duration\";\n\nfunction Session({\n  mode,\n  focusTime,\n  breakTime,\n  focusRemaining,\n  breakRemaining\n}) {\n  // let currentDuration = mode === \"focus\" ? focusTime : breakTime;\n  // let percent = (1 - timeRemaining / (currentDuration * 60)) * 100;\n  // let leftoverTime = currentDuration - timeRemaining // total time - time left\n  if (mode === \"Stop\") {\n    return null;\n  }\n\n  function displayFocus() {\n    return focusTime === 3600 ? \"60:00\" : secondsToDuration(focusTime);\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row mb-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    \"data-testid\": \"session-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }\n  }, mode === \"focus\" ? `Focusing for ${minutesToDuration(focusTime)} minutes` : `On Break for ${minutesToDuration(breakTime)} minutes`), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"lead\",\n    \"data-testid\": \"session-sub-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }\n  }, secondsToDuration(timeRemaining), \" remaining\"), /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }\n  }, isTimerRunning && sessionActive ? \"PAUSED\" : null))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row mb-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"progress\",\n    style: {\n      height: \"20px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"progress-bar\",\n    role: \"progressbar\",\n    \"aria-valuemin\": \"0\",\n    \"aria-valuemax\": \"100\",\n    \"aria-valuenow\": percent // TODO: Increase aria-valuenow as elapsed time increases\n    ,\n    style: {\n      width: `${percent}%`\n    } // TODO: Increase width % as elapsed time increases\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 15\n    }\n  })))));\n}\n\nexport default Session;","map":{"version":3,"sources":["C:/Users/Somreth/Desktop/QProject/Project_Pomodoro_Timer_Qualified_1/src/pomodoro/Session.js"],"names":["React","minutesToDuration","secondsToDuration","Session","mode","focusTime","breakTime","focusRemaining","breakRemaining","displayFocus","timeRemaining","isTimerRunning","sessionActive","height","percent","width"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,iBAAT,EAA4BC,iBAA5B,QAAqD,mBAArD;;AAEA,SAASC,OAAT,CAAiB;AAACC,EAAAA,IAAD;AAAOC,EAAAA,SAAP;AAAkBC,EAAAA,SAAlB;AAA6BC,EAAAA,cAA7B;AAA6CC,EAAAA;AAA7C,CAAjB,EAA+E;AAC3E;AACA;AACA;AACA,MAAIJ,IAAI,KAAK,MAAb,EAAqB;AACnB,WAAO,IAAP;AACD;;AAED,WAASK,YAAT,GAAwB;AACtB,WAAOJ,SAAS,KAAK,IAAd,GAAqB,OAArB,GAA+BH,iBAAiB,CAACG,SAAD,CAAvD;AACD;;AAED,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEA;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEE;AAAI,mBAAY,eAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGD,IAAI,KAAK,OAAT,GACE,gBAAeH,iBAAiB,CAACI,SAAD,CAAY,UAD9C,GAEE,gBAAeJ,iBAAiB,CAACK,SAAD,CAAY,UAHjD,CAFF,eAQE;AAAG,IAAA,SAAS,EAAC,MAAb;AAAoB,mBAAY,mBAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGJ,iBAAiB,CAACQ,aAAD,CADpB,eARF,eAWE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKC,cAAc,IAAIC,aAAlB,GAAkC,QAAlC,GAA6C,IAAlD,CAXF,CADF,CAFA,eAiBA;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,UAAf;AAA0B,IAAA,KAAK,EAAE;AAAEC,MAAAA,MAAM,EAAE;AAAV,KAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AACE,IAAA,SAAS,EAAC,cADZ;AAEE,IAAA,IAAI,EAAC,aAFP;AAGE,qBAAc,GAHhB;AAIE,qBAAc,KAJhB;AAKE,qBAAeC,OALjB,CAK0B;AAL1B;AAME,IAAA,KAAK,EAAE;AAAEC,MAAAA,KAAK,EAAG,GAAED,OAAQ;AAApB,KANT,CAMmC;AANnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,CADF,CAjBA,CADJ;AAkCH;;AAED,eAAeX,OAAf","sourcesContent":["import React from \"react\";\r\nimport { minutesToDuration, secondsToDuration } from \"../utils/duration\";\r\n\r\nfunction Session({mode, focusTime, breakTime, focusRemaining, breakRemaining}) {\r\n    // let currentDuration = mode === \"focus\" ? focusTime : breakTime;\r\n    // let percent = (1 - timeRemaining / (currentDuration * 60)) * 100;\r\n    // let leftoverTime = currentDuration - timeRemaining // total time - time left\r\n    if (mode === \"Stop\") {\r\n      return null;\r\n    }\r\n\r\n    function displayFocus() {\r\n      return focusTime === 3600 ? \"60:00\" : secondsToDuration(focusTime);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n        {/* TODO: This area should show only when a focus or break session is running or pauses */}\r\n        <div className=\"row mb-2\">\r\n          <div className=\"col\">\r\n            {/* TODO: Update message below to include current session (Focusing or On Break) and total duration */}\r\n            <h2 data-testid=\"session-title\">\r\n              {mode === \"focus\"\r\n              ? `Focusing for ${minutesToDuration(focusTime)} minutes`\r\n              : `On Break for ${minutesToDuration(breakTime)} minutes`}\r\n            </h2>\r\n            {/* TODO: Update message below to include time remaining in the current session */}\r\n            <p className=\"lead\" data-testid=\"session-sub-title\">\r\n              {secondsToDuration(timeRemaining)} remaining\r\n            </p>\r\n            <h3>{isTimerRunning && sessionActive ? \"PAUSED\" : null}</h3>\r\n          </div>\r\n        </div>\r\n        <div className=\"row mb-2\">\r\n          <div className=\"col\">\r\n            <div className=\"progress\" style={{ height: \"20px\" }}>\r\n              <div\r\n                className=\"progress-bar\"\r\n                role=\"progressbar\"\r\n                aria-valuemin=\"0\"\r\n                aria-valuemax=\"100\"\r\n                aria-valuenow={percent} // TODO: Increase aria-valuenow as elapsed time increases\r\n                style={{ width: `${percent}%` }} // TODO: Increase width % as elapsed time increases\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n}\r\n\r\nexport default Session;"]},"metadata":{},"sourceType":"module"}